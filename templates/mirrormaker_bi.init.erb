#!/bin/sh
#
# Purpose: This script starts and stops the $DAEMON_NAME daemon
#
# License: GPL
#
# chkconfig: 345 80 30  ## Add chkconfig
# description: Starts Kafka
# Source function library.
. /etc/rc.d/init.d/functions
#set -x


PROC_PATTERN='/opt/kafka_bi/config/mirrormaker_bi_log4j.properties'

# From Params class
NUM_PROCS=<%= scope.lookupvar('kafka_bi::params::mirrormaker_bi_num_procs') %>
USER=<%= scope.lookupvar('kafka_bi::params::user') %>
DAEMON_PATH=<%= scope.lookupvar('kafka_bi::params::kafka_bi_base_dir') %>/bin
DAEMON_NAME=<%= scope.lookupvar('kafka_bi::params::mirrormaker_bi_service_name') %>
JAVA_H=<%= scope.lookupvar('kafka_bi::params::mirrormaker_bi_java_home') %>

# From mirrormaker_bi_deploy class
KAFKACOMMANDLINE=<%= @mirrormaker_bi_commandline %>


EXTRA_ARGS="-daemon -name $DAEMON_NAME"

PATH=$PATH:$DAEMON_PATH

JAVA_HOME_CANDIDATE=$JAVA_H
if [ -d "$JAVA_HOME_CANDIDATE" ]; then
  export JAVA_HOME=$JAVA_HOME_CANDIDATE
  echo "Using java: $JAVA_HOME"
fi

# Check if Kafka is running
daemon_status()
{
  [ `pgrep -f "$PROC_PATTERN"|wc -l` -gt 0 ] && return 1 || return 0
}

wait_for_stop () {
  echo -n "Waiting for $DAEMON_NAME to stop: ..."
  while true;
  do
      daemon_status
      if [ $? -eq 1 ] ; then
        echo -n "."
        sleep 1
      else
        echo -n "stopped."
        break
      fi
  done
  echo
}

# See how we were called.
daemon_status
DAEMON_STATUS=$?

case "$1" in
  start)
        if [ "$DAEMON_STATUS" -eq 1 ]; then
           echo "$DAEMON_NAME is already running."
           exit 0
        fi
        # Start daemon.
        echo -n "Starting $DAEMON_NAME: ";echo -n

        export <%=@mirrormaker_bi_environment%> 

        for i in {1..$NUM_PROCS}; do

# Append $i to gc log file name
          export KAFKA_GC_LOG_OPTS="${KAFKA_GC_LOG_OPTS_PREP}.${i}" 
          
# Derive logging config
          export KAFKA_LOG4J_OPTS="${KAFKA_LOG4J_OPTS_PREP}.${i}" 

# Append $i to log4j config file name
          sed "s/\.log$/\.log.$i/g" <%=scope.lookupvar('kafka_bi::params::mirrormaker_bi_log4j')%>-<%= @name %> > <%=scope.lookupvar('kafka_bi::params::mirrormaker_bi_log4j')%>-<%= @name %>.$i
          /bin/su $USER -- $DAEMON_PATH/kafka-run-class.sh $EXTRA_ARGS $KAFKACOMMANDLINE &
          echo -n .
          JMX_PORT=$((JMX_PORT+1))
        done
        echo
        ;;
  stop)
        if [ "$DAEMON_STATUS" -eq 0 ]; then
           echo "$DAEMON_NAME not running."
           exit 0
        fi
        # Stop daemons
        echo "Shutting down $DAEMON_NAME: "
        #$DAEMON_PATH/kafka-server-stop.sh
        pgrep -f "$PROC_PATTERN" | xargs kill
        wait_for_stop
        ;;
  status)
        [ "$DAEMON_STATUS" -eq 0 ] && echo "$DAEMON_NAME stopped."  || echo "$DAEMON_NAME running..."
        [ "$DAEMON_STATUS" -eq 0 ] && exit 1  || exit 0
        ;;
  restart)
        $0 stop
        $0 start
        ;;
  *)
        echo "Usage: $0 {start|stop|status|restart}"
        exit 1
esac

exit 0
